pipeline {
    // This agent block is correctly configured to sync user permissions
    // and provide access to the host's Docker daemon.
    agent {
        docker {
            image 'knaishadam/mymvnjdk17dckrgit_img:1.0'
            args '-u $(id -u):$(id -g) -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    stages {
        // This is the correct way to check out your code.
        stage('Checkout') {
            steps {
                // 'checkout scm' is the modern, correct command. It automatically
                // checks out the branch associated with the pipeline run from
                // the repository you configured in the Jenkins UI.
                checkout scm
            }
        }

        // Add your other stages (Build, Sonar, etc.) back here AFTER
        // you confirm that the 'Checkout' stage succeeds.
        /*
        stage('Build and Test') {
            steps {
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        */
    }
}